
services:
  # Основное приложение
  image-processor:
    build: .
    ports:
      - "8080:8080"
    environment:
      - SERVER_PORT=8080
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET=images
      - MINIO_REGION=us-east-1
      - MINIO_USE_SSL=false
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_TOPIC=image-processing-tasks
      - KAFKA_GROUPID=image-processor-service
      - MAX_RETRIES=3
      - BASE_DELAY=1s
      - WORKER_COUNT=5
    depends_on:
      minio:
        condition: service_healthy
      kafka:
        condition: service_healthy
      zookeeper:
        condition: service_started
    restart: unless-stopped
    networks:
      - app-network

  # MinIO хранилище
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped
    networks:
      - app-network

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_NUM_PARTITIONS=3
      - KAFKA_DEFAULT_REPLICATION_FACTOR=1

      - KAFKA_LOG_LEVEL=WARN
      - KAFKA_LOG4J_ROOT_LOGLEVEL=WARN
      - KAFKA_LOG4J_LOGGERS=kafka.controller=WARN,kafka.producer.async.DefaultEventHandler=WARN,state.change.logger=WARN
    depends_on:
      zookeeper:
        condition: service_started
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network

  # Zookeeper (требуется для Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network


volumes:
  minio_data:
    driver: local

networks:
  app-network:
    driver: bridge