

services:
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      - SERVER_PORT=8080
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=url_shortener
      - DB_SSLMODE=disable
    depends_on:
      postgres:
        condition: service_healthy
      # redis:
      #   condition: service_healthy
    restart: unless-stopped
    networks:
      - shortener-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=url_shortener
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations/001_init_shortener.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - shortener-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   command: redis-server --requirepass redis
  #   environment:
  #     - REDIS_PASSWORD=redis
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - shortener-network
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "-a", "redis", "ping"]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 10


volumes:
  postgres_data:
#  redis_data:

networks:
  shortener-network:
    driver: bridge